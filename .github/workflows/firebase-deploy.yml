# name: Firebase Deploy

# on:
#   push:
#     branches:
#       - main
#       - qa

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     - name: Extract branch name
#       id: extract-branch
#       shell: bash
#       run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

#     - name: Get package information
#       id: package-info
#       uses: luizfelipelaviola/get-package-info@v2
     
#     - name: Create service account file
#       run: |
#           echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > $HOME/firebase-service-account.json

#     - name: Google auth
#       id: auth
#       uses: 'google-github-actions/auth@v1'
#       with:
#         credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

#     - name: Choose hosting name
#       id: hosting-name
#       run: |
#         if [ ${{ steps.extract-branch.outputs.branch }} == "main" ]; then
#           echo "name=production" >> $GITHUB_OUTPUT
#         elif [ ${{ steps.extract-branch.outputs.branch }} == "qa" ]; then
#           echo "name=qa" >> $GITHUB_OUTPUT
#         else
#           exit 1
#         fi

#     - name: Get secret name
#       id: secret-name
#       run: |
#         echo "secret=$(echo "APP-${{ steps.package-info.outputs.name }}-${{ steps.hosting-name.outputs.name }}-ENV" | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT

#     - name: Get secrets from Google Secret Manager
#       id: secrets
#       uses: google-github-actions/get-secretmanager-secrets@v1
#       with:
#         secrets: |-
#           data:${{ vars.GCP_PROJECT_ID }}/${{ steps.secret-name.outputs.secret }}

#     - name: Parse secrets data dotenv syntax as .env file
#       id: parse-secrets
#       uses: luizfelipelaviola/parse-plain-dotenv@v1
#       with:
#         data: ${{ steps.secrets.outputs.data }}
#         parse-env: false
#         write-env-file: true
#         env-file-path: .env

#     - name: Install Dependencies
#       run: yarn install

#     - name: Install Firebase CLI
#       run: npm install -g firebase-tools

#     - name: Set Firebase Project
#       run: |
#         firebase use --project welcome-in-the-building
    
#     - name: Enable Web Frameworks
#       run: firebase experiments:enable webframeworks

#     - name: Deploy to Firebase
#       run: |
#         if [ ${{ steps.extract-branch.outputs.branch }} == "main" ]; then
#           yarn deploy:prod
#         elif [ ${{ steps.extract-branch.outputs.branch }} == "qa" ]; then
#           yarn deploy:qa
#         else
#           exit 1
#         fi
